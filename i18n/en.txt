std::vector<T>  The result rows
bool  True if valid
Stmt&  *this
Check if this event is being listened to
The objective name
The command enumerations
std::string&  The name of the column
The command instance
Get the score of a player of an objective.
Get the default language code of the i18n object.
T    The converted value
Add the score of a player of an objective.
The actionbar title
Set the working directory of the shell link file.
The player as the command origin, `nullptr` if the command origin is not a player
The mob spawned, `nullptr` if failed to spawn
To prevent memory leakage, the item stack created should be released.
Get Current DLL's module handle
Get the block entity of a block by a position
Get the value as long
bool  True if the permission name is valid, false otherwise.
Get the iterator to the first element
Execute the function the next tick.
The maximum number of executions, -1 means the function will always execute
The implementation of this function must be in header file(because of `GetCurrentModule`)
Get the working directory of the shell link file.
Get if the value is boolean.
The keys (If ignoreCase is true, keys must be lowercase)
bool  True If the role exists, false otherwise.
Traverse the row(references)
Construct a new Any object with uint64 value.
std::shared_ptr<Session>  The Session ptr
Get the permissions of the role(const).
= char
Check whether the row can be adapted to the header.
Get the name of a column.
It will return -1(ULLONG_MAX - 1) if the insert id is not available
Hostname
The player xuid
The path to the i18n file(json)
unsigned char  The value
The parameter
Get the number of the bound parameters.
Stop listening to the event and remove the event listener.
The event listener
Get the session type
bool  True if changed, false otherwise.
bool  True if it is in debug mode
The unsigned integer value
Output a error message.
The floating point type ( `float` )
Set the permission of the role.
std::wstring  The description
Construct a new Any object with double value.
std::string  The host name
The string type
Get if the value is string.
The name of the level
Event listener.
The player
DB::Time  The value
std::optional<Info>  The info
The str to translate and format(c-style)
Any&    The value of the column
The dead player
The command parameter capture result
Database name
The score
std::unordered_map<std::string, ll::Plugin*>  The loaded plugins(name-plugin)
Fetch all the result rows.
The enumeration option corresponding to the parameter
Spawn a mob.
Get all players.
The string value
Permission APIs
The name to check.
HMODULE  DLL Module Handler
= std::string
The name of the role.
Create a new session(internal).
Player information database interfaces
Get the data path of the plugin
ResultSet Result set
The float value
Get if the value is null.
std::wstring  The arguments
Create an item stack.
It will create the column(=add) if it does not exist
The command description
DB::DateTime   The value
Find the information of a player by realName.
Construct a new Row object.
Operator, to store a row of results.
int  The number of rows affected
The fade out duration
Prepare a query.
...
Load translation from a file or dir.
std::weak_ptr<PERM::Role>  The role(weak ref).
Construct a new Any object with byte array value.
Execute the statement(after binding all the parameters)
The flags
The website
The scoreboard objective
unsigned long  The value
Connection string like `mysql://localhost:3306?key1=value1&key2=value2`
SharedPointer<Stmt>  The ptr
= float
Get the target path of the shell link file.
The description
Get the last error message
Check whether the role has the member.
std::string  Error message
Construct a parameter.
The event system.
T  The current row(converted)
True if the parameter is optional; otherwise false.
SharedPointer<Stmt>  The statement
Impletementation
std::weak_ptr<Session>  The session ptr
Get if the value is blob.
int  The size of the header
Where to store
Construct a new Any object with char* value.
*this
Translate SEH Exception to C++ Exception, enable /EHa(Enable SEH Exception) and call _set_se_translator(seh_exception::TranslateSEHtoCE) in new thread
Delete a role.
Return false in callback function to stop the iteration
Execute a query without results.
Find the information of a player by xuid.
Get the number of the unbound parameters.
SharedPointer<Session>  The session
Get the value as unsigned char
Get the handle of LiteLoader.dll.
Create a new objective.
The license of the plugin
Convert string to Any.
The subtitle
Construct a new Any object with string value.
Get if the value is (unsigned) integer.
Reduce the score of a player of an objective.
Get the 'ShowCmd' flags of the shell link file.
The value
This file contains the definitions of types.
The name of the permission to set.
The 'ShowCmd' flags
Get a role object.
Get the path.
The HotKey struct
Construct a new Any object with unsigned long value.
Init (and load) a shell link file.
DB::ByteArray  The value
Permission classes for PermissionAPI
Get the type of the i18n object.
bool   True if resolved, false otherwise.
Stmt& *this
Path to the database file
An event that fires as players die.
Operator, to bind a row.
A list containing all entities
Get the I18nBase object of a certain plugin.
Construct a new Any object with time value.
bool  True if the plugin is loaded
int   The index of the column
Get the icon location of the shell link file.
The unsigned char value
Get the permissions of a player.
The unsigned long value
The git information of the plugin
Get the hot key of the shell link file.
LL::Plugin*  The plugin(nullptr if not found)
Execute the function every `tickInterval` ticks.
The char value
Get if the set is valid
The modifier flags(mod) can be a combination of the following values:
Get whether the header contains a column.
unsigned int   The value
Parameter index
The default value
Construct a new Any object with int32(int) value.
std::string  The connection string
The real name of the player
Get the value as float.
Validate the role data
= int
Fetch the current row.
A row
The display name of the role.
The block source to get, `nullptr` if failed to get
The added score
Check if a permission exists.
Delete a permission.
Permissions&  The permissions of the role.
The short value
Get the value as DateTime
Add the member to the role.
True if canceled; otherwise false.
bool  True If the player is a member of the role, false otherwise.
std::unordered_map<std::string, int>::iterator  The iterator
Construct a new Any object with date value.
The header(column names) of the row(shared_ptr)
Get the last insert id
Get the size of the header.
Get the value of the parameter
The permission required for command execution
Construct a new Row object(move).
Get the player as the command origin.
Get the namespace of the permission.
Translate a str.
bool  The value
Example:
Get with this type
This file is a simple header-only SEH-Exception convert helper with minwindef
Get the members of the role(non-const).
bool  True If the player is member of the role, false otherwise.
Set the 'ShowCmd' flags of the shell link file.
PERM::Permissions  The permissions of the player.
The return value of DB::bind
The path to the i18n dir
Get the name of the level
Get the value as double.
Get a player by his/her name or XUID.
std::string  The loader version
The language code like en_US,zh_CN("" => this->defaultLocaleName)
Construct a new Any object with null value.
A list containing all entities in the dimension
bool  True if all the rows have been fetched
True if set; otherwise false.
The descirption(introduction) of the plugin
SharedPointer<Stmt>  The prepared statement
"Naturally" means simulating breaking the block with a certain item.
Get if the value is time.
Break a block naturally.
Roles    The sorted roles.
The parameter name
The dimension ID of the dimension (Overworld: 0; Nether: 1; Ender: 2)
Operator-> to implement better API.
std::string    The hex string
Get the number value as T
Get the roles of a player.
Construct a SingleFileI18N object.
The xuid of the member(player) to check.
bool  True if the header is empty
Parameter name
An event that fires as players join the game.
Delay `tickDelay` ticks to execute the function.
The DateTime object
Get the insert id of the statement
uint64_t  The number of affected rows
The items to give
The (this) pointer
The schedule system
= DB::DateTime
Get the number of rows affected by the statement.
Traverse the row
= unsigned char
Translate a str(c-style str).
An event that fires as players use bucket.
Get the password.
uint16_t  The port number
const char*  The translated str(c-style str)
Get weather all the rows have been fetched.
The number of the items
Remove the score of a player from an objective.
The message
The integer type ( `int` )
The new i18n object.
Get the value of a column
Get the value as short
The lasting time
Create a Role object.
The default translation data
= unsigned long
It is not recommended to store the DB::Stmt reference returned by this method,
The dimension ID of the dimension of the block source (Overworld: 0; Nether: 1; Ender: 2)
Get the value as unsigned long long
std::vector<std::string>  The names
std::wstring  The path
std::string  The password
int  The number of the bound parameters
Construct a new Any object with int16(short) value.
DBType  The database type
Operator, to bind single values.
std::string  The system locale name.
Get the value as ByteArray
ll::Plugin*  The plugin(nullptr if not found)
The title type
ShellLinkFile&  *this
Get all entities in a dimension.
Setup a command.
Get a loaded plugin by HMODULE handle
The length of the char* value
The return value of DB::into
Role type for PermissionAPI
The boolean type ( `bool` )
The damage source causing the player death
The player who has just joined the game
Get if the value is date.
= DB::Date
True if having successfully placed the block; otherwise false
The hot key
The position of the block
Example
int  The number of the unbound parameters
Get the system locale name.
std::unordered_map<std::string, LL::Plugin*>  The loaded plugins(name-plugin)
int  The value
The enumeration type
The description(introduction) of the plugin
= short
The player name
Get a block source.
The xuid of the member(player) to remove.
Get the real name of the player.
The row to adapt
std::string  The database name
Init APIs by GetAddressProc.
Clear all the bound values.
Construct a new ConnParams object
Reset the statement from executing state to perpared state
Type  The type of the role.
An initializer list like `{{"key1", "value1"}, {"key2", "value2"}}`
std::weak_ptr<PERM::Role>  The created role(weak ref).
Return false in callback to stop fetching
Check whether a permission name is valid.
Translate a str to the specified language.
Subscribes to an event with reference parameters.
The Any object
Check whether a permission exists.
bool   Success or not
The xuid of the member(player) to add.
Add a column to the header.
The type of the mob
Get the parameter type.
The command name only consists of lowercase letters and `_` .
The block type ( `Const* Block` )
= double
Get the database.
Row  The current row
The value type
Random Number Generator
The entity to get, `nullptr` if failed to get
Construct a new Any object with const char* value.
Members&  The members of the role.
The identifier of the items
A pointer to the item stack
The version of the plugin(ll::Version)
Construct a new Any object with int8(char) value.
Callback to process results
The const char* value
Construct a new Any object with int64 value.
char  The value
Get the type of session
unsigned short  The value
std::string  The string value
Get the All the loaded plugins
You can use `#define DBANY_NO_NULL_CONVERSION` to disable null conversion.
int  The number of parameters
This event cannot be suppressed.
Get the shared pointer point to this
Output a normal message.
Destructor.
Get weather the header is empty.
True if the player is successfully given the items; otherwise false
Get the value as unsigned long
Try resloving the shell link file.
Operator, to store a set of results.
T           The value
Get the value as long long
Set the score of a player of an objective.
The command overloads
The int value
bool  True if the permission exists in the role, false otherwise.
Get a block by a position
Get the loader version as a string
Open the database connection.
Get the translation of the specified key.
The icon location
Spawn Particles for Client User Interface
int  The 'ShowCmd' flags
Get whether the session is open.
Get a role object. If the role does not exist, it will be created.
Display a title on the player's screen.
Re-execute the statement(keep the currently bound value to re-excute).
Get a loaded plugin by name
DB::Date  The value
Whether to use upper case (0x1A or 0x1a)
The cloned mob, `nullptr` if failed to clone
I18nBase*              The pointer to the I18nBase object in PluginOwnData, null if failed
After `tickDelay` ticks, execute the function every `tickInterval` ticks.
The event listening to
Note
The long value
Vector of values
long  The value
Close the session.
The entity selector type ( `CommandSelector<Actor>` )
Add a row to the set.
std::string  Language(such as: en, zh_CN, ja, ru)
The header(column names) of rows
The plugin handle(nullptr -> GetCurrentModule())
The default language code(if no lang code is specified, it will use this)
Foundation data classes for PermissionAPI
You should not assume a 0.05s gap between two ticks, for Minecraft does not guarantee 20 ticks per second.
The player UUID
Get the port.
The path
Bind a value to the next statement parameter.
bool  True if the role name is valid, false otherwise.
The description name of the permission.
True if finished; otherwise false.
The type of the i18n object
Any  The converted value
The other information of the plugin(key-value)
Get whether LiteLoader is in debug mode
HMODULE  The handle
The default language code of the i18n object
It will create a new Any object if the column doesn't exist
Get the value as T.
Check if a role exists.
The index of the column
True if having successfully broken the block; otherwise false
Remove the member from the role.
Get the host.
bool  True if the column exists
If there are multiple keys matched,
The item stack
Load a shell link(.lnk) file.
Operator>> to store the result.
= unsigned long long
std::string  The description
bool     True if the plugin is registered successfully
std::string    The value
bool  Success or not
An initializer list like `{"col1", "col2", "col3"}`
True if the title is successfully shown; otherwise false
The arguments
Get the value as unsigned short
Enable or not
Save the shell link file.
T The converted value
Callback function to handle the result rows
The dynamic command instance
float  The value
Member type for PermissionAPI
The command origin
Connection parameters
This will create a shared_ptr of the header
Sort the roles by priority.
Get the arguments of the shell link file.
The player to get, `nullptr` if failed to get
Construct a new Any object with long value.
Step to the next row(not fetch).
The function to call for each element
The type to convert to
Whether to omit 0x prefix
True if reduced; otherwise false.
= long long
DB::DBType  The database type
Get the value of one of the keys.
An item stack is a set of identical items that can be picked up with the pointer at a time.
This method gets the XBOX account name of the player.
The Time object
The function to execute
The byte array value
bool  True If the player has the Permission, false otherwise.
The value with type `T`
Fetch each of the result rows.
Clone a mob.
The path where to save the file.
The position of the cloned mob
Get the scheme.
The type of role.
Check if a player is a member of a role.
The name of the permission to remove.
Stmt*  this
Get the members of the role(const).
Get the value as int
If `this->autoExecute` is true, there is no need to call this method
A list containing all player
Set the hot key of the shell link file.
The char* value
The str to translate and format
std::string  The namespace of the permission.
The dimension ID of the dimension of the block (Overworld: 0; Nether: 1; Ender: 2)
Construct a new Any object with uint32(unsigned int) value.
If you want to clear the bound value, use clear() instead.
The Any::Type value
std::string  The data path of the plugin
Whether the permission is enabled.
Register an permission.
The name or the XUID
The item type ( `CommandItem` )
The path to the file
The value type of vector
Function to convert Any to T.
= long
Operator<< to bind values.
The "world" of Minecraft, a collection of everything.
Save the data.
Set the icon location of the shell link file.
The string
PERM::Roles  The roles of the player.
std::string  The username
T             The value
The block entity to get, `nullptr` if failed to get
The name of the column
bool  True if the role has the member, false otherwise.
bool True if the row can be adapted
The parameter type
Bind a value to a statement parameter.
The display position (The right of the escape menu: `list` ; The sidebar: `sidebar` ; Below the name bar: `belowName` )
Ranking method of the objective
A function that executes when the event fires
The header(column names) of the row
When the value is null, what to replace with(default '\<NULL\>')
sample
Check whether a player has a permission.
Get a player by a unique ID.
The name of the plugin
bool  True If the player has the permission, false otherwise.
The default language code
Whether to ignore the case of the key
Username
The mob to be cloned
An event that fires as the server has started.
Execute a query.
The objective
Database type
The floating value
bool  True if the role has the permission, false otherwise.
Close the statement.
The boolean value
Whether to execute the statement automatically after binding all parameters
std::string  The icon location
SharedPointer<Stmt>  this
Command execution output
The name of the permission.
The unique ID
Create a new session.
Convert Any::Type to string.
True if this event is being listened to; otherwise false
= unsigned short
Remove the permission of the role.
The hwnd
Load translation from another plugin.
The block
std::string The result string
Get all the player names.
ll::Version  The loader version
Get the value as Date
Get the number of affected rows by the last query.
Convert to the table string.
The dynamic command
std::weak_ptr<Session>  self
The path where to save the file(optional).
bool  True if there is a next row
Get the number of parameters.
Check whether a player is member of a role.
Subscribes to an event with constant parameters.
The integer position type ( `CommandPosition` )
= unsigned int
Construct a new Row Set object
std::string  The scheme
You can use Any::is_number() to check if the value is a number before calling this function.
Get the Session ptr by the (this) pointer.
The floating point position type ( `CommandPositionFloat` )
Fetch each of the result rows(For compatibility).
The type of the title
The integer value
uint64_t  The row id of the last inserted row
Give the player items.
The block source of the dimension of the block
Get if the value is unsigned integer.
Turn on/off debug output.
This function will also delete the permission instances in roles.
bool  True If the permission exists, false otherwise.
The command parameters
The unsigned short value
Get an entity by a unique ID.
The row to add
std::string  The path
Construct a new Any object with date time value.
Ascending
Construct a new Any object with uint8(unsigned char) value.
The scheduled task
Get if the value is floating or (unsigned) integer.
The default language code(if empty, default the system default language)
std::wstring  The icon location
The plugin name.
Remove a column from the header.
Get the loader version as a Version object
long long      The value
Output a success message.
The name of the permission to check.
Value to bind
The type of the value
The string type ( 'std::string' )
Find the information of a player by UUID.
The C++ basic number type to convert to, such as int, long, double, etc.
Function to convert a row to T.
The format arguments
The version of the plugin(LL::Version)
The path to the i18n file(json) or dir
Operator, to bind a map container.
The query to execute
The dimension of the block (Overworld: 0; Nether: 1; Ender: 2)
Descending
const Permissions&  The permissions of the role.
Create and open a new session.
The delayed ticks
The dimension ID of the dimension of the cloned mob (Overworld: 0; Nether: 1; Ender: 2)
Construct a new Any object with uint16(unsigned short) value.
uint64_t  The insert id
Get the permissions of the role(non-const).
Custom Type Conversion
Fetch the current row(internal).
unsigned long long  The value
The ticks in an interval
Implementation
Check whether the role has the permission.
Use `Global<Level>->getPlayer()` to call this method.
The HMODULE handle of the plugin
Check whether a role exists.
The mob effect type ( `Const* MobEffect` )
The language key
The fade in duration
The permission name to check.
Construct a new Any object with float value.
List of values
The command name (lowercase letters and `_` )
The integer type
= DB::ByteArray
I18nBase*   The pointer to the I18nBase object in PluginOwnData, null if failed
The display name of the objective
The path to the file(optional).
Place a block.
T  The value
Check whether the player has the Permission or not.
Operator<< to execute a query.
The texts of the title
Get the username.
Set the target path of the shell link file.
Get the iterator to the last element.
Get the raw connection string.
The Date object
Get the value as string
Get the value as string.
Construct a heavy I18nBase object.
Cancel the scheduled task.
Construct a new Any object with boolean value.
ShellLinkFile::HotKey  The hot key
Get if the value is floating.
Port
LL::Version  The loader version
True if added; otherwise false.
The main title
Get the index of a column.
Get if the value is date time.
Get whether the plugin is loaded
Get all the player info.
Password
Step to the next row(=step).
True if removed; otherwise false.
Clone a new i18n object.
The player selector type ( `CommandSelector<Player>` )
double  The value
= bool
= DB::Time
Get the type of the role.
Get or create a role object.
Get the value as unsigned int
An initializer list like `{"host", "localhost", "port", 3306}`
Set the arguments of the shell link file.
Register a plugin
The return value of DB::use
The dimension ID of the dimension of the mob (Overworld: 0; Nether: 1; Ender: 2)
Integer to hex string.
Set the display mode of the objective.
The position of the mob
std::string  The translated str
The block to get, `nullptr` if failed to get
std::vector<PlayerInfo::Info>  The info
Extra data for the permission.
Get the session.
The callback function
std::string  The translation
Get the value as char
Greater or less.
Close the shell link file.
The args to pass to the i18n type constructor
const Members&  The members of the role.
Set the description of the shell link file.
Vector of column names(header) and values
Operator, to bind a sequence container.
The reduced score
Check if the scheduled task is finished.
short  The value
Construct a new Row Header object.
示例程序：
I18nBase*    The I18nBase pointer
Check whether the role name is valid.
The name of the Permission.
Get or set the self pointer
The xuid of the player.
Get the value as Time
The unsigned int value
The type of the value to return
Whether to omit leading zero
It will return -1(ULLONG_MAX - 1) if the row count is not available
If this object is constructed by `ConnParams(const std::string& str)`
The language code like en_US
std::string  The arguments
If exists, index will be set to the array index
Check whether the permission exists in the role.
Get all entities.
Query to execute
The header(column names) of rows(shared_ptr)
Get the description of the shell link file.
Change current user and database.
